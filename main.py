from fastapi import FastAPI, Request
import requests, os, traceback

app = FastAPI()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_KEY = os.getenv("OPENAI_API_KEY")

@app.get("/")
def root():
    return {"status": "ok"}

# üí¨ –í–µ–±—Ö—É–∫ –æ—Ç Telegram
@app.post("/webhook")
async def telegram_webhook(req: Request):
    try:
        data = await req.json()
        print("üì© Incoming Telegram:", data)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if "message" not in data:
            print("‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—è 'message' –≤ –∑–∞–ø—Ä–æ—Å–µ")
            return {"status": "ignored"}

        chat_id = data["message"]["chat"]["id"]
        user_text = data["message"].get("text", "")

        if not user_text:
            print("‚ö†Ô∏è –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GPT")
            return {"status": "ignored"}

        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –Ω–∞–ø–∏—Å–∞–ª: {user_text}")

        # üß† –ó–∞–ø—Ä–æ—Å –∫ OpenAI
        try:
            r = requests.post(
                "https://api.openai.com/v1/chat/completions",
                headers={"Authorization": f"Bearer {OPENAI_KEY}"},
                json={
                    "model": "gpt-3.5-turbo",
                    "messages": [
                        {"role": "system", "content": "–¢—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞. –û—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É."},
                        {"role": "user", "content": user_text}
                    ]
                },
                timeout=20
            )

            if not r.ok:
                print(f"‚ùå –û—à–∏–±–∫–∞ OpenAI: {r.status_code} {r.text}")
                reply = f"‚ö†Ô∏è –û—à–∏–±–∫–∞ GPT ({r.status_code}): {r.text[:300]}"
            else:
                gpt_data = r.json()
                reply = gpt_data["choices"][0]["message"]["content"]
                print(f"ü§ñ GPT –æ—Ç–≤–µ—Ç: {reply}")

        except Exception as e:
            print("üî• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenAI:", traceback.format_exc())
            reply = "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ GPT API."

        # üì§ –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Telegram
        try:
            t_resp = requests.post(
                f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage",
                json={"chat_id": chat_id, "text": reply},
                timeout=10
            )

            if not t_resp.ok:
                print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {t_resp.status_code} {t_resp.text}")

        except Exception as e:
            print("üî• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:", traceback.format_exc())

        return {"status": "ok"}

    except Exception as e:
        print("üö® –û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤–µ–±—Ö—É–∫–∞:", traceback.format_exc())
        return {"status": "error", "details": str(e)}
